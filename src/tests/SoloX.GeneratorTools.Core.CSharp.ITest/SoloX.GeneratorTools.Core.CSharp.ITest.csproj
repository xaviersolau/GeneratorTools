<Project Sdk="Microsoft.NET.Sdk">

  <Import Project="..\..\SharedProperties.props" />

  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>

    <IsPackable>false</IsPackable>

  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="coverlet.collector" Version="3.1.0">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="17.0.0" />
    <PackageReference Include="SoloX.CodeQuality.Test" Version="2.0.8">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="SoloX.CodeQuality.Test.Helpers" Version="2.0.8" />
    <PackageReference Include="xunit" Version="2.4.1" />
    <PackageReference Include="xunit.runner.visualstudio" Version="2.4.3">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Moq" Version="4.16.1" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\libs\SoloX.GeneratorTools.Core.CSharp\SoloX.GeneratorTools.Core.CSharp.csproj" />
    <ProjectReference Include="..\SoloX.GeneratorTools.Core.CSharp.UTest\SoloX.GeneratorTools.Core.CSharp.UTest.csproj" />
    <ProjectReference Include="..\SoloX.GeneratorTools.Core.Test.Helpers\SoloX.GeneratorTools.Core.Test.Helpers.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Compile Update="Generator\Patterns\Impl\Method\SimpleMethodPattern.cs">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Compile>
    <Compile Update="Generator\Patterns\Impl\Statement\ForStatementPattern.cs">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Compile>
    <Compile Update="Generator\Patterns\Impl\Expression\ConditionExpressionPattern.cs">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Compile>
    <Compile Update="Generator\Patterns\Impl\Statement\ThrowStatementPattern.cs">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Compile>
    <Compile Update="Generator\Patterns\Impl\Statement\PackedForEachStatementPattern.cs">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Compile>
    <Compile Update="Generator\Patterns\Impl\Statement\ForEachStatementPattern.cs">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Compile>
    <Compile Update="Generator\Patterns\Impl\Statement\IfStatementPattern.cs">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Compile>
    <Compile Update="Generator\Patterns\Impl\Statement\PackedIfStatementPattern.cs">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Compile>
    <Compile Update="Generator\Patterns\Impl\SimplePattern.cs">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Compile>
    <Compile Update="Generator\Patterns\Itf\ISimplePattern.cs">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Compile>
    <Compile Update="Generator\Samples\ISimpleSample.cs">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Compile>
  </ItemGroup>

</Project>
